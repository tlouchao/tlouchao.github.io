---
import { Icon } from 'astro-icon/components'
import "../styles/components/buttontheme.scss";
---
<button-theme id="button-theme">
    <span class="sr-only">Toggle Theme</span>
    <button>
        <Icon name="sun-duotone" />
        <Icon name="moon-duotone" />
    </button>
</button-theme>

<style>

    /* MOBILE */
    #button-theme {
        [data-icon="moon-duotone"] {
            margin-top: 1px; /* minor */
        }
    }

    /* DESKTOP */
	@media (min-width: 768px) {
        button {
            display: flex;
            border: none;
            border-radius: 40%;
        }
    }
</style>

<script>
    import { setButtonIcon } from '../scripts/utils.js'
    import { $themeDark } from '../scripts/stores/theme.js'

    class ButtonTheme extends HTMLElement {
        button : HTMLButtonElement | null;
        svg0: SVGSVGElement | null;
        svg1: SVGSVGElement | null;
        constructor() {
            super();
            
            this.button = this.querySelector('button');
            this.button?.addEventListener('click', this.handleClick);
            
            let svgs = this.querySelectorAll('svg');
            this.svg0 = svgs[0];
            this.svg1 = svgs[1];

            this.setButtonTheme();
        }

        handleClick = () => {
            $themeDark.set(!$themeDark.get());
            this.setButtonTheme();
        }

        setButtonTheme = () => {
            let dark = $themeDark.get();
            this.button?.setAttribute('aria-pressed', String(dark));
            setButtonIcon(this.button, this.svg0, this.svg1, dark)
        }
    }

    // Tell the browser to use our ButtonTheme class for <button-theme> elements.
    customElements.define('button-theme', ButtonTheme);

</script>