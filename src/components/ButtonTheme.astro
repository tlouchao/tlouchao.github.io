---
import { Icon } from 'astro-icon/components'
---
<button-theme>
    <span class="sr-only">Toggle Theme</span>
    <button>
        <Icon name="moon-duotone" />
        <Icon name="sun-duotone" />
    </button>
</button-theme>

<style>
    button-theme {
        display: inherit;
        flex-direction: inherit;
    }
	button {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.5em;
        width: var(--nav-wh);
        height: var(--nav-wh);
		cursor: pointer;
        transition: color .25s ease;
        border-left: 1px solid var(--color-nav);
        color: var(--color-nav-label);
        background-color: var(--color-nav-item);
	}
    button:hover {
        color: var(--color-secondary);
	}
    svg {
        width: 100%;
        height: 100%;
    }
    svg:nth-child(1) {
        display: inherit;
    }
    svg:nth-child(2) {
        display: none;
    }
    /* DESKTOP */
	@media (min-width: 768px) {
        button {
            border: none;
            border-radius: 50%;
        }
    }
</style>

<script>
    import { $themeDark } from '../scripts/stores/theme.js'

    class ButtonTheme extends HTMLElement {
        button : HTMLButtonElement | null;
        svg: SVGSVGElement | null;
        constructor() {
            super();
            
            this.button = this.querySelector('button');
            this.button?.addEventListener('click', this.handleClick);
            this.svg = this.querySelector('svg'); // get the first SVG
            
            this.setButtonTheme();
        }

        handleClick = () => {
            $themeDark.set(!$themeDark.get());
            this.setButtonTheme();
        }

        setButtonTheme = () => {
            let dark = $themeDark.get();
            if (this.button) {
                this.button.setAttribute('aria-pressed', String(dark));
            }
            if (dark) {
                this.svg?.setAttribute("style", "display: inherit;");
                this.svg?.nextElementSibling?.setAttribute("style", "display: none;");
            } else {
                this.svg?.setAttribute("style", "display: none;");
                this.svg?.nextElementSibling?.setAttribute("style", "display: inherit;");
            }
        }
    }

    // Tell the browser to use our ButtonTheme class for <button-theme> elements.
    customElements.define('button-theme', ButtonTheme);

</script>