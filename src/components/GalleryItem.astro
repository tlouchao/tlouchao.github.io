---
import { Image } from 'astro:assets';

interface Props {
    src: ImageMetadata;
    label?: string;
    evtTarget: string;
}

let { src, label = '', evtTarget } = Astro.props;
---

<gallery-item data-target={evtTarget}>
    <Image src={src} alt={label} />
</gallery-item>

<style>
    gallery-item {
        position: relative;
        overflow: hidden;
        width: 100%;
        aspect-ratio: 1/1;
        background-color: white;
    }
    img {
        width:100%; 
        height:100%;
        object-position: center;
        object-fit: cover;
        opacity: 1;
    }
        img:hover {
        cursor: pointer;
        transition: .25s ease;
        opacity: 0.66;
    }
</style>

<script>
import { ModalEvent } from '../scripts/events';
    class GalleryItems extends HTMLElement {
        img : HTMLImageElement | null;
        modal : HTMLElement | null;
        constructor() {
            super();
            this.img = this.querySelector('img');
            this.modal = document.querySelector('#' + this.dataset.target);
        }
        connectedCallback() {
            this.img?.addEventListener('click', this.handleClick);
        }
        disconnectedCallback() {
            this.img?.removeEventListener('click', this.handleClick);
        }
        handleClick = () => {
            let evt = new Event(ModalEvent.OPEN);
            this.modal?.dispatchEvent(evt);
        }
    }
    // customElements.define('gallery-item', GalleryItem);
</script>