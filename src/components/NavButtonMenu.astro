---
import { Icon } from 'astro-icon/components'
import "../styles/components/navbuttonmenu.scss";

interface Props {
  ariaControls: string;
  isExpand?: boolean;
}

let { ariaControls, isExpand = false } = Astro.props;
const ariaLabel = "Navbar Menu Button"

---
<nav-button-menu id="nav-button-menu"
                 data-expand={isExpand}>
    <span class="sr-only">{ariaLabel}</span>
    <button aria-controls={ariaControls} 
            aria-expanded={isExpand} 
            aria-label={ariaLabel}>
        <Icon name="menu" />
        <Icon name="close" />
    </button>
</nav-button-menu>

<style>
    #nav-button-menu {
        svg {
            margin-top: 1px;
        }
    }
</style>

<script>
    import { setBoolAttr, setButtonIcon } from '../scripts/utils.js'

    class NavButtonMenu extends HTMLElement {
        button : HTMLButtonElement | null;
        svg0: SVGSVGElement | null;
        svg1: SVGSVGElement | null;

        static observedAttributes = ["data-expand"];

        constructor() {
            super();
            this.button = this.querySelector('button');
            let svgs = this.querySelectorAll('svg');
            this.svg0 = svgs[0];
            this.svg1 = svgs[1];

            setBoolAttr(this.button, "aria-expanded", false);
            setButtonIcon(this.button, this.svg0, this.svg1, false)
        }

        attributeChangedCallback(name : string, oldValue : string | null, newValue : string | null) {
            let expand = newValue != undefined;
            setBoolAttr(this.button, "aria-expanded", expand);
            setButtonIcon(this.button, this.svg0, this.svg1, expand)
        }
    }
    // Tell the browser to use our NavButtonMenu class for <nav-button-menu> elements.
    customElements.define('nav-button-menu', NavButtonMenu);
</script>