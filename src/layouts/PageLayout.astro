---
import path from 'path';

import BaseHead from '../components/BaseHead.astro';
import NavBar from '../components/NavBar.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

import '../styles/layouts/pagelayout.scss'

import { ViewTransitions } from "astro:transitions";
import { SITE_TITLE, SITE_DESCRIPTION} from '../consts';
import {type FrontmatterProps} from '../interface';

import '@fontsource/oxygen';
import '@fontsource/roboto';

const {title, url, frontmatter, headings} = Astro.props as FrontmatterProps;
const heroImage = '/freljord_splash.jpg';

let headingsFiltered = headings?.filter((heading) => heading.depth <= 3);
let headingsUrl : string[] = [];

let slugFound = false;
if (url) headingsFiltered?.map((heading : {slug: string}) => {
    if (heading.slug) {
        if (!slugFound) slugFound = true;
        headingsUrl.push(path.join(url, '#' + heading.slug));
    } else {
        headingsUrl.push("");
    }
});

---

<!doctype html>
<html lang="en"> <!--transition:animate="none">-->
	<head>
        <ViewTransitions />
		<BaseHead title={SITE_TITLE}
                  description={SITE_DESCRIPTION}  
                  transition:persist/>
	</head>
	<body class="theme-dark">
        <NavBar />
        <div id="header-layout">
            <Header header={title ? title : frontmatter?.title}/>
            <div id="main-layout">
                <div id="main-layout-content">
                    <main>
                        <slot />
                    </main>
                    <aside>
                        <div id="aside-content">
                            <ul>
                                {
                                    slugFound 
                                        ? headingsFiltered?.map((heading, idx) => 
                                            <a href={headingsUrl[idx]}>
                                                <li>{heading.text}</li>
                                            </a>
                                        )
                                        : headingsFiltered?.map((heading) => 
                                            <li>{heading.text}</li>
                                        )
                                }
                            </ul>
                        </div>
                    </aside>
                </div>
            </div>
            <Footer />
        </div>
    </body>
</html>